// Code generated by MockGen. DO NOT EDIT.
// Source: ./api.go

// Package mock_api is a generated GoMock package.
package mock_api

import (
	reflect "reflect"
	duplicate "teststaticwongnai/duplicate"

	gomock "github.com/golang/mock/gomock"
)

// MockTestGetinfo is a mock of TestGetinfo interface.
type MockTestGetinfo struct {
	ctrl     *gomock.Controller
	recorder *MockTestGetinfoMockRecorder
}

// MockTestGetinfoMockRecorder is the mock recorder for MockTestGetinfo.
type MockTestGetinfoMockRecorder struct {
	mock *MockTestGetinfo
}

// NewMockTestGetinfo creates a new mock instance.
func NewMockTestGetinfo(ctrl *gomock.Controller) *MockTestGetinfo {
	mock := &MockTestGetinfo{ctrl: ctrl}
	mock.recorder = &MockTestGetinfoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTestGetinfo) EXPECT() *MockTestGetinfoMockRecorder {
	return m.recorder
}

// ResGet mocks base method.
func (m *MockTestGetinfo) ResGet() (map[string]int, duplicate.Age) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResGet")
	ret0, _ := ret[0].(map[string]int)
	ret1, _ := ret[1].(duplicate.Age)
	return ret0, ret1
}

// ResGet indicates an expected call of ResGet.
func (mr *MockTestGetinfoMockRecorder) ResGet() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResGet", reflect.TypeOf((*MockTestGetinfo)(nil).ResGet))
}
